int sg(int c0,int c1,int c2,int c3) //1必胜 -1必败
// {
//     if(c0 == 0 && c1 == 0)  //只有c2,c3必败
//         return -1;
//     if(c0 == 1 && c1 == 0 && c2 == 0 && c3 == 0)    //只有一张0必败
//         return -1;
//     if(c1 == 1 && c0 == 0 && c2 == 0)   //只有一张1必败
//         return -1;
//     int f = 1;
//     if(c0 > 0)  //一张0和其他任意一张牌组合
//     {
//         f = min(f,sg(c0 - 1,c1,c2,c3));
//     }
//     if(c1 >= 2) //用一张2替换两张1
//         f = min(f,sg(c0,c1 - 2,c2 + 1,c3));
//     if(c1 > 0 && c2 > 0)    //用一张3替换一张1和一张2
//         f = min(f,sg(c0,c1 - 1,c2 - 1,c3 + 1));
//     if(f == -1) //后继存在必败，当前必胜；否则，必败
//         return 1;
//     return -1;
// }